import re
### to find where the substring is in the string
### is easy  enough finding the first but gets confusing when finding multiple
string = 'CGCGGAGGGCCCCACTAGGGCCCAGGGCCCCGAGGGCCCCATCGAGGGCCCAAGGGCCCAGGGCCCATTAAGGGCCCAGGGCCCAAAGAGGGCCCCTTAAGTAGGGCCCAGGGCCCCGACTCATCTCAGACAGGGCCCATACTTAGGGCCCCTACATAGGGCCCAGGGCCCTGGCGTCACAGGGCCCGCAAGGGCCCACAGGGCCCAGGGCCCTCGCAGGGCCCAGGGCCCCCACTTAATAAGGGCCCCCAGGGCCCAGGGCCCTAGGGCCCCCCGGCGGCCAAACATAGGGCCCGAGGGCCCCCAGGGCCCGAGGGCCCAGGGCCCCAGGGCCCAGGGCCCAGCAGGGCCCACCAGGGCCCTTAGAGGGCCCCGTACAGGGCCCTGCCGACTAAGGGCCCGAGGGCCCCAAGGGCCCAACGAGGGCCCCAAGGCAACACAGGGCCCAAAGGGCCCAAGGGCCCTATAGGGCCCAGGGCCCCAGGGCCCAGGGCCCAGGGCCCGCTAGGGCCCCTTAAGGGCCCATCCAGAGGGCCCTCCCCCGATAGGGCCCAGGGCCCAGGGCCCGAGGGCCCACTCCCCAGGGCCCAAAAGGGCCCCAGCTTTGTAGGGCCCATTCAAGGGCCCGACAGGGCCCAGGGCCCGAATCAGGGCCCCTGTCCAGGGCCCTCCTATCTGAGAGGGCCCAGAGGGCCCTTCAATCAGGGCCCCCAGGGCCCCGAAGGGCCCAGGGCCCCCCCTTCCACCAGGGCCCACAGGGCCCAGGGCCCAGGGCCCGAGGGCCCTAGGGCCCTTAAGGGCCCTC'
substring = 'AGGGCCCAG'

def motif(x,y):
    motif_loc = []
    # uses regular expression, issue arose in that it was not recording an index as it had overlap
    # use of ?= makes it stop the overlap skip
    for m in re.finditer(('(?=' + substring + ')'),string):
        # append to a list with +1 as indexing system is different outside of python
        motif_loc.append(str((m.start()+1)))
    return((motif_loc))

# joinging a list together
print(' '.join(motif(substring,string)))


